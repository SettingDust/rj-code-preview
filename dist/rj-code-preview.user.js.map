{
  "version": 3,
  "sources": ["../src/dlsite-api.ts", "../src/hack-rj-code.ts", "../src/index.ts"],
  "sourcesContent": ["export const productPage = (rj: string) => `https://www.dlsite.com/maniax/work/=/product_id/${rj}.html`\r\n\r\nexport function productInfo(rj: string) {\r\n    return new Promise((resolve, reject) => {\r\n        GM_xmlhttpRequest<{\r\n            work_name: string,\r\n            work_type_string: string,\r\n            maker_name: string,\r\n            regist_date: string,\r\n            title_name: string,\r\n            age_category_string: string,\r\n            creaters: {\r\n                [K in 'voice_by' | 'illust_by' | 'scenario_by' | 'created_by']: {\r\n                    name: string\r\n                }\r\n            },\r\n            image_main: {\r\n                url: string\r\n            }\r\n        }[]>({\r\n            url: `https://www.dlsite.com/maniax/api/=/product.json?workno=${rj}`,\r\n            responseType: \"json\",\r\n            onload: function (resp) {\r\n                if (resp.readyState === 4 && resp.status === 200) resolve(resp.response[0])\r\n                else reject(resp)\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport function productRatingInfo(rj: string) {\r\n    return new Promise((resolve, reject) => {\r\n        GM_xmlhttpRequest<{\r\n            [K in typeof rj] : {\r\n                dl_count: string,\r\n                rate_average_2dp: string\r\n            }\r\n        }>({\r\n            url: `https://www.dlsite.com/maniax/product/info/ajax?product_id=${rj}`,\r\n            responseType: \"json\",\r\n            onload: function (resp) {\r\n                if (resp.readyState === 4 && resp.status === 200) resolve(resp.response[rj])\r\n                else reject(resp)\r\n            }\r\n        })\r\n    })\r\n}", "import { productPage } from './dlsite-api'\n\nexport const RJ_CODE_LINK_CLASS = 'rj-code'\nexport const RJ_CODE_ATTRIBUTE = 'rj-code'\nconst RJ_REGEX = new RegExp('R[JE][0-9]{6,8}', 'gi')\n\nfunction wrapRJCode(rj: string) {\n  const a = document.createElement('a')\n  a.classList.add(RJ_CODE_LINK_CLASS)\n  a.href = productPage(rj)\n  a.innerHTML = rj\n  a.target = '_blank'\n  a.rel = 'noreferrer'\n  a.dataset[RJ_CODE_ATTRIBUTE] = rj\n  return a\n}\n\nfunction injectRJCode(node: Node) {\n  const text = node.nodeValue\n  const matches = <{ index: number; value: string }[]>[]\n\n  let match\n  while ((match = RJ_REGEX.exec(text))) {\n    matches.push({\n      index: match.index,\n      value: match[0]\n    })\n  }\n\n  node.nodeValue = text.slice(0, matches[0].index)\n  let prev = <Node | null>null\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i]\n    const a = wrapRJCode(match.value)\n    node.parentNode.insertBefore(a, prev?.nextSibling ?? node.nextSibling)\n\n    const nextIndex = matches[i + 1]?.index\n    const afterText = text.slice(match.index + match.value.length, nextIndex)\n    if (afterText) {\n      const afterNode = document.createTextNode(afterText)\n      node.parentNode.insertBefore(afterNode, a.nextElementSibling)\n      prev = afterNode\n    } else prev = a\n  }\n}\n\nexport default function (root: Node) {\n  const walker = document.createTreeWalker(root, NodeFilter.SHOW_TEXT, {\n    acceptNode(node: Node): number {\n      if (node.parentElement.classList.contains(RJ_CODE_LINK_CLASS) || node.nodeValue.match(RJ_REGEX))\n        return NodeFilter.FILTER_ACCEPT\n    }\n  })\n\n  while (walker.nextNode()) {\n    const node = walker.currentNode\n    if (!node.parentElement.classList.contains(RJ_CODE_LINK_CLASS)) injectRJCode(node)\n  }\n}", "import hackRjCode from './hack-rj-code'\n\nconst observer = new MutationObserver((records) => {\n  for (const { addedNodes } of records) for (const node of addedNodes) hackRjCode(node)\n})\nobserver.observe(document.body, { childList: true, subtree: true })\n\ndocument.addEventListener('securitypolicyviolation', (e) => {\n  if (e.blockedURI.includes('img.dlsite.jp')) {\n    const img = document.querySelector(`img[src=\"${e.blockedURI}\"]`)\n    img.remove()\n  }\n})"],
  "mappings": ";;;;;;;;;;;;AAAO,MAAM,cAAc,CAAC,OAAe,mDAAmD;;;ACEvF,MAAM,qBAAqB;AAC3B,MAAM,oBAAoB;AACjC,MAAM,WAAW,IAAI,OAAO,mBAAmB,IAAI;AAEnD,WAAS,WAAW,IAAY;AAC9B,UAAM,IAAI,SAAS,cAAc,GAAG;AACpC,MAAE,UAAU,IAAI,kBAAkB;AAClC,MAAE,OAAO,YAAY,EAAE;AACvB,MAAE,YAAY;AACd,MAAE,SAAS;AACX,MAAE,MAAM;AACR,MAAE,QAAQ,iBAAiB,IAAI;AAC/B,WAAO;AAAA,EACT;AAEA,WAAS,aAAa,MAAY;AAjBlC;AAkBE,UAAM,OAAO,KAAK;AAClB,UAAM,UAA8C,CAAC;AAErD,QAAI;AACJ,WAAQ,QAAQ,SAAS,KAAK,IAAI,GAAI;AACpC,cAAQ,KAAK;AAAA,QACX,OAAO,MAAM;AAAA,QACb,OAAO,MAAM,CAAC;AAAA,MAChB,CAAC;AAAA,IACH;AAEA,SAAK,YAAY,KAAK,MAAM,GAAG,QAAQ,CAAC,EAAE,KAAK;AAC/C,QAAI,OAAoB;AACxB,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAMA,SAAQ,QAAQ,CAAC;AACvB,YAAM,IAAI,WAAWA,OAAM,KAAK;AAChC,WAAK,WAAW,aAAa,IAAG,kCAAM,gBAAN,YAAqB,KAAK,WAAW;AAErE,YAAM,aAAY,aAAQ,IAAI,CAAC,MAAb,mBAAgB;AAClC,YAAM,YAAY,KAAK,MAAMA,OAAM,QAAQA,OAAM,MAAM,QAAQ,SAAS;AACxE,UAAI,WAAW;AACb,cAAM,YAAY,SAAS,eAAe,SAAS;AACnD,aAAK,WAAW,aAAa,WAAW,EAAE,kBAAkB;AAC5D,eAAO;AAAA,MACT;AAAO,eAAO;AAAA,IAChB;AAAA,EACF;AAEe,WAAR,qBAAkB,MAAY;AACnC,UAAM,SAAS,SAAS,iBAAiB,MAAM,WAAW,WAAW;AAAA,MACnE,WAAW,MAAoB;AAC7B,YAAI,KAAK,cAAc,UAAU,SAAS,kBAAkB,KAAK,KAAK,UAAU,MAAM,QAAQ;AAC5F,iBAAO,WAAW;AAAA,MACtB;AAAA,IACF,CAAC;AAED,WAAO,OAAO,SAAS,GAAG;AACxB,YAAM,OAAO,OAAO;AACpB,UAAI,CAAC,KAAK,cAAc,UAAU,SAAS,kBAAkB;AAAG,qBAAa,IAAI;AAAA,IACnF;AAAA,EACF;;;ACxDA,MAAM,WAAW,IAAI,iBAAiB,CAAC,YAAY;AACjD,eAAW,EAAE,WAAW,KAAK;AAAS,iBAAW,QAAQ;AAAY,6BAAW,IAAI;AAAA,EACtF,CAAC;AACD,WAAS,QAAQ,SAAS,MAAM,EAAE,WAAW,MAAM,SAAS,KAAK,CAAC;AAElE,WAAS,iBAAiB,2BAA2B,CAAC,MAAM;AAC1D,QAAI,EAAE,WAAW,SAAS,eAAe,GAAG;AAC1C,YAAM,MAAM,SAAS,cAAc,YAAY,EAAE,cAAc;AAC/D,UAAI,OAAO;AAAA,IACb;AAAA,EACF,CAAC;",
  "names": ["match"]
}
